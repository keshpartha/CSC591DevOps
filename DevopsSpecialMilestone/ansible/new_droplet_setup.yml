---
- name: Provision - Droplet
  hosts: digitalocean

  vars:
    do_token: "{{ lookup('env', 'DO_TOKEN') }}"

  tasks:

  - name: ensure ssh key exists
    user: >
      name={{ ansible_user_id }}
      generate_ssh_key=yes
      ssh_key_file=.ssh/id_rsa

  - name: ensure key exists at DigitalOcean
    digital_ocean: >
      state=present
      command=ssh
      name=my_ssh_key
      ssh_pub_key={{ lookup('file', '~/.ssh/id_rsa.pub') }}
      api_token={{ do_token }}
    register: my_ssh_key

  - name: ensure droplet one exists
    digital_ocean: >
      state=present
      command=droplet
      name=droplet-one
      size_id=512mb
      region_id=sgp1
      image_id=ubuntu-14-04-x64
      ssh_key_ids={{ my_ssh_key.ssh_key.id }}
      api_token={{ do_token }}
    register: droplet_one

  - name: Add new droplet to host group
    local_action: add_host hostname={{ droplet_one.droplet.ip_address }} groupname=launched
  
  - name: Wait for SSH to come up
    local_action: wait_for host={{ droplet_one.droplet.ip_address }} port=22 delay=60 timeout=320 state=started 

- name: Setup
  hosts: launched
  gather_facts: True 
  roles:
    - git
    - nodejs
    - redisconf
    - monitoring

  tasks:

    - name: Stop all forever scripts
      command: forever stopall

    - name: Remove old code
      command: rm -rf /src/SimpleSetsWebApp

    - name: Cloning Simple Set Repository
      git: repo=https://github.com/nikunj91/SimpleSetsWebApp.git dest=/src/SimpleSetsWebApp

    - name: npm install
      npm: path=/src/SimpleSetsWebApp/

    - name: Start AppServer
      command: forever start /src/SimpleSetsWebApp/lib/simplesets_webapp.js

    - name: Start monitoring
      command: forever start -c python ./monitor.py
